/**
 * Client Data API client
 * Provides functions for submitting client data
 */

import { API_CONFIG } from '$lib/config/api.js';
import { post, ApiError } from '$lib/api/client.js';

/**
 * Submit client data
 * @param {Object} clientData - Client data to submit
 * @param {string} clientData.clientName - Client name
 * @param {string} clientData.phone - Client phone
 * @param {string} clientData.product - Product name
 * @param {string} clientData.comment - Additional comment
 * @returns {Promise<any>}
 */
export async function submitClientData(clientData) {
	try {
		console.log('üì§ submitClientData called with:', clientData);
		console.log('üåê Using endpoint:', API_CONFIG.endpoints.submitClientData);

		const response = await post(
			API_CONFIG.endpoints.submitClientData,
			{
				client_name: clientData.clientName,
				phone: clientData.phone,
				product: clientData.product,
				comment: clientData.comment
			},
			{},
			true // Auth required
		);

		console.log('‚úÖ submitClientData success:', response);

		return {
			success: response.success,
			message: response.message || '–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã'
		};
	} catch (error) {
		console.error('‚ùå submitClientData error:', error);

		if (error instanceof ApiError) {
			console.log('üìä Error details:', { status: error.status, data: error.data });

			if (error.status === 422) {
				// Validation errors
				return {
					success: false,
					errors: error.data && error.data.errors ? error.data.errors : {},
					message: error.data && error.data.message ? error.data.message : '–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏'
				};
			} else if (error.status === 401) {
				return {
					success: false,
					message: '–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è'
				};
			}
		}

		return {
			success: false,
			message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö'
		};
	}
}
